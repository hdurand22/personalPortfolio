{"ast":null,"code":"var _jsxFileName = \"/Users/haydendurand/Documents/Dev/Projects/personalSite/frontend/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport { ParallaxLayer } from '@react-spring/parallax';\nimport axios from 'axios';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, FormControl, FormGroup, Form, Button } from 'react-bootstrap';\nimport Breadcrumbs from './Breadcrumbs';\nimport Phone from '../assets/telephone.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contact = _ref => {\n  _s();\n\n  let {\n    parallax\n  } = _ref;\n  const [isShown, setIsShown] = useState(false);\n  const ref = useRef(parallax);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [status, setStatus] = useState('Submit');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setStatus('Sending...');\n    const {\n      name,\n      email,\n      message\n    } = e.target.elements;\n    let details = {\n      name: name.value,\n      email: email.value,\n      message: message.value\n    };\n    let res = await axios.post('http://localhost:5000/contact', {\n      data: details\n    }).then(res => {\n      if (res.data.status === 'Message sent') {\n        alert(res.data.status);\n      } else {\n        alert(res.data.status);\n      }\n    });\n    setStatus('Submit');\n  };\n\n  const resetForm = () => {};\n\n  useEffect(() => {\n    const mouseLeaveEvent = e => {\n      e.preventDefault();\n    }; // If dropdown is open, listen for mouse hovering out of area\n\n\n    if (isShown) {\n      window.addEventListener('mouseover', mouseLeaveEvent);\n    }\n\n    return () => {\n      window.removeEventListener('mouseover', mouseLeaveEvent);\n    };\n  }, [isShown]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      id: \"contact\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        onMouseEnter: () => setIsShown(true),\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), isShown && /*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        setIsShown: setIsShown,\n        parallax: ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"section-content\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Phone,\n            fluid: \"true\",\n            className: \"section-image\",\n            alt: \"Old Phone Vectors by Vecteezy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"section-text\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Get in touch with me!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mb-3\",\n              controlId: \"contactName\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"text\",\n                placeholder: \"Enter your full name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mb-3\",\n              controlId: \"contactEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"email\",\n                placeholder: \"Enter your email address\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n              className: \"mb-3\",\n              controlId: \"contactMessage\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                as: \"textarea\",\n                rows: 8,\n                value: message,\n                onChange: e => setMessage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Contact, \"0YgdZxZ+UhLLE44GYSmh4IMrpvc=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["/Users/haydendurand/Documents/Dev/Projects/personalSite/frontend/src/components/Contact.js"],"names":["ParallaxLayer","axios","React","useState","useEffect","useRef","Container","Row","Col","FormControl","FormGroup","Form","Button","Breadcrumbs","Phone","Contact","parallax","isShown","setIsShown","ref","name","setName","email","setEmail","message","setMessage","status","setStatus","handleSubmit","e","preventDefault","target","elements","details","value","res","post","data","then","alert","resetForm","mouseLeaveEvent","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { ParallaxLayer } from '@react-spring/parallax';\nimport axios from 'axios';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Row, Col, FormControl, FormGroup, Form, Button } from 'react-bootstrap';\nimport Breadcrumbs from './Breadcrumbs';\nimport Phone from '../assets/telephone.jpg';\n\nconst Contact = ({ parallax }) => {\n    const [isShown, setIsShown] = useState(false);\n    const ref = useRef(parallax);\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    const [status, setStatus] = useState('Submit');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setStatus('Sending...');\n        const { name, email, message } = e.target.elements;\n\n        let details = {\n            name: name.value,\n            email: email.value,\n            message: message.value\n        };\n\n        let res = await axios.post('http://localhost:5000/contact', {\n            data: details\n        }).then((res) => {\n            if (res.data.status === 'Message sent') {\n                alert(res.data.status);\n            }\n            else {\n                alert(res.data.status);\n            }\n\n        })\n        \n        setStatus('Submit');\n    }\n\n    const resetForm = () => {\n        \n    }\n\n    useEffect(() => {\n        const mouseLeaveEvent = (e) => {\n            e.preventDefault();\n        }\n\n        // If dropdown is open, listen for mouse hovering out of area\n        if (isShown) {\n            window.addEventListener('mouseover', mouseLeaveEvent);\n        }\n\n        return () => {\n            window.removeEventListener('mouseover', mouseLeaveEvent);\n        }\n    }, [isShown]);\n\n    return (\n        <>\n            <div className='section-header' id='contact'>\n                <h1 onMouseEnter={() => setIsShown(true)}>Contact</h1>\n                {isShown &&\n                    <Breadcrumbs setIsShown={setIsShown} parallax={ref} />\n                }\n            </div>\n            <Container>\n                <Row className='section-content'>\n                    <Col>\n                        <img src={Phone} fluid='true' className='section-image' alt='Old Phone Vectors by Vecteezy' />\n                    </Col>\n                    <Col className='section-text'>\n                        <Form onSubmit={handleSubmit}>\n                            <h3>Get in touch with me!</h3>\n                            <FormGroup className='mb-3' controlId='contactName'>\n                                <Form.Label>Name</Form.Label>\n                                <FormControl type='text' placeholder='Enter your full name' value={name} onChange={(e) => setName(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup className='mb-3' controlId='contactEmail'>\n                                <Form.Label>Email</Form.Label>\n                                <FormControl type='email' placeholder='Enter your email address' value={email} onChange={(e) => setEmail(e.target.value)} />\n                            </FormGroup>\n                            <FormGroup className='mb-3' controlId='contactMessage'>\n                                <Form.Label>Message</Form.Label>\n                                <FormControl as='textarea' rows={8} value={message} onChange={(e) => setMessage(e.target.value)}/>\n                            </FormGroup>\n                            <Button type='submit'>{status}</Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n\n    )\n};\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}
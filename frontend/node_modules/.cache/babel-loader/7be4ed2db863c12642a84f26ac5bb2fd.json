{"ast":null,"code":"var _jsxFileName = \"/Users/haydendurand/Documents/Dev/Projects/personalSite/frontend/src/components/List.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst List = () => {\n  _s();\n\n  const fetchMoreListItems = () => {\n    setListItems(prevState => [...prevState, ...Array.from(Array(20).keys(), n => n + prevState.length + 1)]);\n    setIsFetching(false);\n  };\n\n  const [listItems, setListItems] = useState(Array.from(Array(30).keys(), n => n + 1));\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [listItems.map(listItem => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: listItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 40\n    }, this)), isFetching && 'Fetching more list items...']\n  }, void 0, true);\n};\n\n_s(List, \"6OfiKKyzllGekDpVyCAGuDkvWAw=\", false, function () {\n  return [useInfiniteScroll];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/haydendurand/Documents/Dev/Projects/personalSite/frontend/src/components/List.js"],"names":["React","useState","useInfiniteScroll","List","fetchMoreListItems","setListItems","prevState","Array","from","keys","n","length","setIsFetching","listItems","isFetching","map","listItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,kBAAkB,GAAG,MAAM;AAC7BC,IAAAA,YAAY,CAACC,SAAS,IAAK,CAAC,GAAGA,SAAJ,EAAe,GAAGC,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,EAA6BC,CAAC,IAAIA,CAAC,GAAGJ,SAAS,CAACK,MAAd,GAAuB,CAAzD,CAAlB,CAAf,CAAZ;AACAC,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAHD;;AAKA,QAAM,CAACC,SAAD,EAAYR,YAAZ,IAA4BJ,QAAQ,CAACM,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,EAAD,CAAL,CAAUE,IAAV,EAAX,EAA6BC,CAAC,IAAIA,CAAC,GAAG,CAAtC,CAAD,CAA1C;AACA,QAAM,CAACI,UAAD,EAAaF,aAAb,IAA8BV,iBAAiB,CAACE,kBAAD,CAArD;AAGA,sBACI;AAAA,eACKS,SAAS,CAACE,GAAV,CAAcC,QAAQ,iBAAI;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAA1B,CADL,EAEKF,UAAU,IAAI,6BAFnB;AAAA,kBADJ;AAMH,CAhBD;;GAAMX,I;UAOkCD,iB;;;KAPlCC,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react'\nimport useInfiniteScroll from '../hooks/useInfiniteScroll';\n\nconst List = () => {\n    const fetchMoreListItems = () => {\n        setListItems(prevState => ([...prevState, ...Array.from(Array(20).keys(), n => n + prevState.length + 1)]));\n        setIsFetching(false);\n    }\n    \n    const [listItems, setListItems] = useState(Array.from(Array(30).keys(), n => n + 1));\n    const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n\n\n    return (\n        <>\n            {listItems.map(listItem => <div>{listItem}</div>)}\n            {isFetching && 'Fetching more list items...'}\n        </>\n    )\n}\n\nexport default List"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = callback => {\n  _s();\n\n  const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  useEffect(() => {\n    if (!isFetching) {\n      return;\n    }\n\n    callback(() => {\n      console.log('called back');\n    });\n  }, [isFetching]);\n\n  const handleScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || isFetching) {\n      return;\n    }\n\n    setIsFetching(true);\n  };\n\n  return [isFetching, setIsFetching];\n};\n\n_s(useInfiniteScroll, \"FYjEg0GDnA4ll52SA6ii2eaiI98=\", false, function () {\n  return [useInfiniteScroll];\n});\n\nexport default useInfiniteScroll;","map":{"version":3,"sources":["/Users/haydendurand/Documents/Dev/Projects/personalSite/frontend/src/hooks/useInfiniteScroll.js"],"names":["React","useState","useEffect","useInfiniteScroll","callback","isFetching","setIsFetching","fetchMoreListItems","window","addEventListener","handleScroll","removeEventListener","console","log","innerHeight","document","documentElement","scrollTop","offsetHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,iBAAiB,GAAIC,QAAD,IAAc;AAAA;;AACpC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,iBAAiB,CAACI,kBAAD,CAArD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AACA,WAAO,MAAMF,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,YAArC,CAAb;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACG,UAAL,EAAiB;AACb;AACH;;AACDD,IAAAA,QAAQ,CAAC,MAAM;AACXQ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAFO,CAAR;AAGH,GAPQ,EAON,CAACR,UAAD,CAPM,CAAT;;AASA,QAAMK,YAAY,GAAG,MAAM;AACvB,QAAIF,MAAM,CAACM,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KAA4DF,QAAQ,CAACC,eAAT,CAAyBE,YAArF,IAAqGb,UAAzG,EAAqH;AACjH;AACH;;AACDC,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GALD;;AAOA,SAAO,CAACD,UAAD,EAAaC,aAAb,CAAP;AACH,CAzBD;;GAAMH,iB;UACkCA,iB;;;AA0BxC,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = (callback) => {\n    const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, []);\n\n    useEffect(() => {\n        if (!isFetching) {\n            return;\n        }\n        callback(() => {\n            console.log('called back');\n        });\n    }, [isFetching]);\n\n    const handleScroll = () => {\n        if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || isFetching) {\n            return;\n        }\n        setIsFetching(true);\n    }\n\n    return [isFetching, setIsFetching];\n}\n\nexport default useInfiniteScroll"]},"metadata":{},"sourceType":"module"}